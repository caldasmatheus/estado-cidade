/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.ModeloCidade;
import controle.ConectaBanco;
import controle.ControleCidade;
import controle.ModeloTabela;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;

import org.junit.BeforeClass;


/**
 *
 * @author mathe
 */
public class FrmTabela extends javax.swing.JFrame {
    
    ConectaBanco connEstado = new ConectaBanco();
    ConectaBanco connCidade = new ConectaBanco();
    ModeloCidade mod = new ModeloCidade();
    ControleCidade control = new ControleCidade();
    /**
     * Creates new form FrmTabela
     */
    
    
    public FrmTabela() {
        initComponents();
        connEstado.conexao();
        connCidade.conexao();
        preencherTabela("Select * from cidade inner join estado on cidade.id_estado = estado.id_estado");
        connEstado.executaSQL("Select * from estado order by nome_estado");
        jComboBoxEstado.removeAllItems();
        
        try {
            connEstado.rs.first();
            do{
                jComboBoxEstado.addItem(connEstado.rs.getString("nome_estado"));
            }while(connEstado.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preencher a comboBOX estado"+ ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabelCodigo = new javax.swing.JLabel();
        jLabelNome = new javax.swing.JLabel();
        jLabelEstado = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jButtonNovo = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButtonInicio = new javax.swing.JButton();
        jButtonFim = new javax.swing.JButton();
        jButtonAnterior = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCidade = new javax.swing.JTable();
        jButtonProximo = new javax.swing.JButton();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jButtonDeletar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cidades");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelCodigo.setText("CÃ³digo:");

        jLabelNome.setText("Nome:");

        jLabelEstado.setText("Estado:");

        jTextFieldCodigo.setEnabled(false);
        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });

        jTextFieldNome.setEnabled(false);

        jButtonNovo.setText("NOVO");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("SALVAR");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonAlterar.setText("ALTERAR");
        jButtonAlterar.setEnabled(false);
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButtonInicio.setText("<<");
        jButtonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInicioActionPerformed(evt);
            }
        });

        jButtonFim.setText(">>");
        jButtonFim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFimActionPerformed(evt);
            }
        });

        jButtonAnterior.setText("<");
        jButtonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnteriorActionPerformed(evt);
            }
        });

        jTableCidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableCidade);

        jButtonProximo.setText(">");
        jButtonProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProximoActionPerformed(evt);
            }
        });

        jComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEstadoActionPerformed(evt);
            }
        });

        jButtonDeletar.setText("DELETAR");
        jButtonDeletar.setEnabled(false);
        jButtonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("CANCELAR");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelCodigo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabelNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonNovo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeletar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonFim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonProximo)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodigo)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNome)
                    .addComponent(jLabelEstado)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonAlterar)
                    .addComponent(jButtonInicio)
                    .addComponent(jButtonFim)
                    .addComponent(jButtonAnterior)
                    .addComponent(jButtonProximo)
                    .addComponent(jButtonDeletar)
                    .addComponent(jButtonCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("FormulÃ¡rio de cadastro de cidades");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(659, 338));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed
    @BeforeClass
    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        
        try {
            
            mod.setNome(jTextFieldNome.getText());
            connEstado.executaSQL("select * from estado where nome_estado='"+jComboBoxEstado.getSelectedItem()+"'");
            connEstado.rs.first();
            mod.setCod_estado(connEstado.rs.getInt("id_estado"));
            ControleCidade control = new ControleCidade();
            control.InserirCidade(mod);
            preencherTabela("Select * from cidade inner join estado on cidade.id_estado = estado.id_estado");
            jTextFieldNome.setEnabled(false);
            jButtonAlterar.setEnabled(false);
            jButtonDeletar.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            jButtonCancelar.setEnabled(false);
            jTextFieldCodigo.setText("");
            jTextFieldNome.setText("");
            jButtonNovo.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao inserir o registro"+ ex);
        }
        
    }//GEN-LAST:event_jButtonSalvarActionPerformed
    @BeforeClass
    private void jButtonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnteriorActionPerformed
        // TODO add your handling code here:
        jButtonAlterar.setEnabled(true);
        jButtonDeletar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jTextFieldNome.setEnabled(true);
        try {
            //connCidade.executaSQL("select * from cidade order by id_cidade");
            connCidade.rs.previous();
            jTextFieldCodigo.setText(String.valueOf(connCidade.rs.getInt("id_cidade")));
            jTextFieldNome.setText(connCidade.rs.getString("nome_cidade"));
            connEstado.executaSQL("select * from estado where id_estado="+connCidade.rs.getInt("id_estado"));
            connEstado.rs.first();
            jComboBoxEstado.setSelectedItem(connEstado.rs.getString("nome_estado"));
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao setar o registro anterior"+ ex);
        }
    }//GEN-LAST:event_jButtonAnteriorActionPerformed

    private void jComboBoxEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEstadoActionPerformed
    @BeforeClass
    private void jButtonInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInicioActionPerformed
        // TODO add your handling code here:
        jButtonAlterar.setEnabled(true);
        jButtonDeletar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jTextFieldNome.setEnabled(true);
        
        try {
            connCidade.executaSQL("select * from cidade order by id_cidade");
            connCidade.rs.first();
            jTextFieldCodigo.setText(String.valueOf(connCidade.rs.getInt("id_cidade")));
            jTextFieldNome.setText(connCidade.rs.getString("nome_cidade"));
            connEstado.executaSQL("select * from estado where id_estado="+connCidade.rs.getInt("id_estado"));
            connEstado.rs.first();
            jComboBoxEstado.setSelectedItem(connEstado.rs.getString("nome_estado"));
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao setar o primeiro registro"+ ex);
        }
    }//GEN-LAST:event_jButtonInicioActionPerformed
    @BeforeClass
    private void jButtonFimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFimActionPerformed
        // TODO add your handling code here:
        jButtonAlterar.setEnabled(true);
        jButtonDeletar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jTextFieldNome.setEnabled(true);
        try {
            connCidade.executaSQL("select * from cidade order by id_cidade");
            connCidade.rs.last();
            jTextFieldCodigo.setText(String.valueOf(connCidade.rs.getInt("id_cidade")));
            jTextFieldNome.setText(connCidade.rs.getString("nome_cidade"));
            connEstado.executaSQL("select * from estado where id_estado="+connCidade.rs.getInt("id_estado"));
            connEstado.rs.first();
            jComboBoxEstado.setSelectedItem(connEstado.rs.getString("nome_estado"));
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao setar o ultimo registro"+ ex);
        }
    }//GEN-LAST:event_jButtonFimActionPerformed
    @BeforeClass
    private void jButtonProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProximoActionPerformed
        // TODO add your handling code here:
        jButtonAlterar.setEnabled(true);
        jButtonDeletar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jButtonNovo.setEnabled(false);
        jTextFieldNome.setEnabled(true);
        try {
            connCidade.executaSQL("select * from cidade order by id_cidade");
            connCidade.rs.next();
            jTextFieldCodigo.setText(String.valueOf(connCidade.rs.getInt("id_cidade")));
            jTextFieldNome.setText(connCidade.rs.getString("nome_cidade"));
            connEstado.executaSQL("select * from estado where id_estado="+connCidade.rs.getInt("id_estado"));
            connEstado.rs.first();
            jComboBoxEstado.setSelectedItem(connEstado.rs.getString("nome_estado"));
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao setar o proximo registro" + ex);
        }
    }//GEN-LAST:event_jButtonProximoActionPerformed
    @BeforeClass
    private void jButtonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletarActionPerformed
        // TODO add your handling code here:
        
        try {
            mod.setCodigo(Integer.parseInt(jTextFieldCodigo.getText()));
            mod.setNome(jTextFieldNome.getText());
            mod.setCod_estado(connCidade.rs.getInt("id_estado"));
            control.ExcluiCidade(mod);
            preencherTabela("Select * from cidade inner join estado on cidade.id_estado = estado.id_estado");
            jTextFieldNome.setEnabled(false);
            jButtonAlterar.setEnabled(false);
            jButtonDeletar.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            jButtonCancelar.setEnabled(false);
            jTextFieldCodigo.setText("");
            jTextFieldNome.setText("");
            jButtonNovo.setEnabled(true);
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao deletar um registro" + ex);
        }
    }//GEN-LAST:event_jButtonDeletarActionPerformed
    @BeforeClass
    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
        // TODO add your handling code here:
        
        try {
            mod.setCodigo(Integer.parseInt(jTextFieldCodigo.getText()));
            mod.setNome(jTextFieldNome.getText());
            connCidade.executaSQL("select * from estado where nome_estado ='"+jComboBoxEstado.getSelectedItem()+"'");
            connCidade.rs.first();
            mod.setCod_estado(connCidade.rs.getInt("id_estado"));
            control.AlteraCidade(mod);
            preencherTabela("Select * from cidade inner join estado on cidade.id_estado = estado.id_estado");
            jTextFieldNome.setEnabled(false);
            jButtonAlterar.setEnabled(false);
            jButtonDeletar.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            jButtonCancelar.setEnabled(false);
            jTextFieldCodigo.setText("");
            jTextFieldNome.setText("");
            jButtonNovo.setEnabled(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane,"Erro ao alterar um registro" + ex);
        }

    }//GEN-LAST:event_jButtonAlterarActionPerformed
    @BeforeClass
    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        // TODO add your handling code here:
        jTextFieldNome.setEnabled(true);
        jButtonAlterar.setEnabled(true);
        jButtonDeletar.setEnabled(true);
        jButtonSalvar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
        jTextFieldCodigo.setText("");
        jTextFieldNome.setText("");
        jButtonNovo.setEnabled(false);
        
        
        
    }//GEN-LAST:event_jButtonNovoActionPerformed
    @BeforeClass
    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        jTextFieldNome.setEnabled(false);
        jButtonAlterar.setEnabled(false);
        jButtonDeletar.setEnabled(false);
        jButtonSalvar.setEnabled(false);
        jButtonCancelar.setEnabled(false);
        jTextFieldCodigo.setText("");
        jTextFieldNome.setText("");
        jButtonNovo.setEnabled(true);
    }//GEN-LAST:event_jButtonCancelarActionPerformed
    @BeforeClass
    public void preencherTabela(String SQL){
        ArrayList dados = new ArrayList();
        
        String [] Colunas = new String[]{"ID","Cidade","Estado"};
        
        connCidade.executaSQL(SQL);
        try {
            connCidade.rs.first();
            do{
                dados.add(new Object[]{connCidade.rs.getInt("id_cidade"), connCidade.rs.getString("nome_cidade"), connCidade.rs.getString("sigla_estado")});
            }while(connCidade.rs.next());
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Erro ao preemcher o ArrayList" + ex);
        }
        
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTableCidade.setModel(modelo);
        jTableCidade.getColumnModel().getColumn(0).setPreferredWidth(155);
        jTableCidade.getColumnModel().getColumn(0).setResizable(false);
        jTableCidade.getColumnModel().getColumn(1).setPreferredWidth(309);
        jTableCidade.getColumnModel().getColumn(1).setResizable(false);
        jTableCidade.getColumnModel().getColumn(2).setPreferredWidth(155);
        jTableCidade.getColumnModel().getColumn(2).setResizable(false);
        jTableCidade.getTableHeader().setReorderingAllowed(false);
        jTableCidade.setAutoResizeMode(jTableCidade.AUTO_RESIZE_OFF);
        jTableCidade.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmTabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmTabela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonAnterior;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonDeletar;
    private javax.swing.JButton jButtonFim;
    private javax.swing.JButton jButtonInicio;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonProximo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelEstado;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableCidade;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
